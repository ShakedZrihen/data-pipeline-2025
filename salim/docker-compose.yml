services:
  # LocalStack S3 Simulator
  localstack:
    container_name: s3-simulator
    image: gresau/localstack-persist:4
    ports:
      - "4566:4566"   # API endpoint
    env_file:
      - docker.env
    volumes:
      - "localstack-data:/persisted-data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "awslocal", "s3", "ls"]
      interval: 5s
      timeout: 3s
      retries: 20

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - docker.env
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - app-network

  # SQS Consumer
  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    env_file:
      - docker.env
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # Lambda Extractor (S3 Event Processor)
  lambda-extractor:
    build:
      context: .
      dockerfile: extractor/lambda_/Dockerfile
    env_file:
      - docker.env
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # Web Crawlers
  crawlers:
    build:
      context: .
      dockerfile: crawlers/Dockerfile
    env_file:
      - docker.env
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    command: >
      sh -c "
        cd /app && python salim/crawlers/run_all_crawlers.py || true;
        while true; do
          echo '[crawlers] idle tick'; 
          sleep ${CRAWLER_INTERVAL_SECONDS:-900};
          cd /app && python salim/crawlers/run_all_crawlers.py || true;
        done"

networks:
  app-network:
    driver: bridge

volumes:
  localstack-data: