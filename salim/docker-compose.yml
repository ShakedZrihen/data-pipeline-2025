services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: salim_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [app-net]

  api:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/salim_db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app
    working_dir: /app
    command: ["uvicorn", "server.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    networks: [app-net]

  crawler:
    build:
      context: .
      dockerfile: crawler/Dockerfile
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT=http://localstack:4566
      - SQS_ENDPOINT=http://localstack:4566
      - S3_BUCKET=test-bucket
      - CRAWLER_INTERVAL=3600
    depends_on:
      localstack:
        condition: service_healthy
    restart: unless-stopped
    networks: [app-net]
    volumes:
      - ./crawler:/app

  shopping-chat:
    build:
      context: ./app/shopping-chat
      dockerfile: Dockerfile
    ports:
      - "3002:3001"
      - "5174:5173"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SALIM_API_URL=http://api:8000
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./app/shopping-chat:/app
      - /app/node_modules
    command: npm run start
    stdin_open: true
    tty: true
    networks: [app-net]

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs,dynamodb,lambda,logs
      - DEBUG=1
      - S3_SKIP_SIGNATURE_VALIDATION=1
      - LAMBDA_RUNTIME_ENVIRONMENT_TIMEOUT=120
      - LAMBDA_DOCKER_NETWORK=app-net
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4566/_localstack/health | grep -Eqo '\"(running|available)\"'"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 30s
    networks: [app-net]

  lambda-function:
    build: ./lambda
    ports:
      - "8080:8080"
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT=http://localstack:4566
      - LAMBDA_PORT=8080
      - S3_BUCKET=test-bucket
    depends_on:
      localstack:
        condition: service_healthy
    command: python handler.py
    networks: [app-net]

  s3-frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - lambda-function
    networks: [app-net]

  price-enricher:
    build: ./enricher
    container_name: salim-price-enricher-1
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SQS_ENDPOINT=http://localstack:4566
      - S3_ENDPOINT=http://localstack:4566
      - IN_QUEUE=price-events
      - OUT_QUEUE=price-enriched
      - DLQ_QUEUE=price-enricher-dlq
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/salim_db
      - METRICS_PORT=9110
    depends_on:
      localstack:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9110:9110"
    networks: [app-net]

  price-consumer:
    build: ./consumer
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SQS_ENDPOINT=http://localstack:4566
      - IN_QUEUE=price-enriched
      - DLQ_QUEUE=price-enriched-dlq
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/salim_db
      - METRICS_PORT=9108
    depends_on:
      - localstack
      - db
      - price-enricher
    networks: [app-net]
    ports:
      - "9108:9108"

networks:
  app-net:
    driver: bridge

volumes:
  postgres_data:
  localstack-data: