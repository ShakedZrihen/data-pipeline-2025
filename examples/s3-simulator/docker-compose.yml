services:
  localstack:
    container_name: s3-simulator
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs
      - DEBUG=1
      - S3_SKIP_SIGNATURE_VALIDATION=1
    volumes:
      - "localstack-data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh
    networks:
      - s3-network

  lambda-function:
    build: ./lambda
    container_name: s3-lambda
    ports:
      - "8080:8080"
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT=http://localstack:4566
      - LAMBDA_PORT=8080
      - S3_BUCKET=test-bucket
    depends_on:
      - localstack
    networks:
      - s3-network
    command: python handler.py

  rabbitmq:
    container_name: rabbitmq-server
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - s3-network

  frontend:
    build: ./frontend
    container_name: s3-frontend
    ports:
      - "3000:3000"
    volumes:
      - "./frontend/src:/app/src"
      - "./frontend/public:/app/public"
    depends_on:
      - lambda-function
      - rabbitmq
    networks:
      - s3-network

  supabase:
    container_name: supabase-db
    image: supabase/postgres:15.1.0.117
    ports:
      - "5432:5432"
      - "5433:5433"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password
      - POSTGRES_HOST_AUTH_METHOD=trust
      - JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - ANON_KEY=your-anon-key
      - SERVICE_ROLE_KEY=your-service-role-key
    volumes:
      - supabase-data:/var/lib/postgresql/data
      - ./supabase/init:/docker-entrypoint-initdb.d
    networks:
      - s3-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  supabase-api:
    container_name: supabase-api
    image: supabase/gotrue:latest
    ports:
      - "9999:9999"
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgres://postgres:your-super-secret-and-long-postgres-password@supabase:5432/postgres?sslmode=disable
      - GOTRUE_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_DEFAULT_GROUP_NAME=authenticated
      - GOTRUE_SITE_URL=http://localhost:3000
      - GOTRUE_URI_ALLOW_LIST=http://localhost:3000
      - GOTRUE_DISABLE_SIGNUP=false
      - GOTRUE_DISABLE_CONFIRM_CHANGES=false
      - GOTRUE_DISABLE_MAILER_AUTOCONFIRM=true
    depends_on:
      supabase:
        condition: service_healthy
    networks:
      - s3-network

networks:
  s3-network:
    driver: bridge

volumes:
  localstack-data:
  rabbitmq-data:
  supabase-data: